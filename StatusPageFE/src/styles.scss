// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$status-primary: mat-palette($mat-blue, A400, A200, A700);
$status-accent: mat-palette($mat-indigo, A200, A100, A400);

// The warn palette is optional (defaults to red).
$status-warn: mat-palette($mat-deep-orange);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$status-theme: mat-light-theme((
  color: (
    primary: $status-primary,
    accent: $status-accent,
    warn: $status-warn
  )
));

$status-dark-primary: mat-palette($mat-blue, A300, A600, A800);
$status-dark-accent: mat-palette($mat-indigo, A200, A100, A400);

// The warn palette is optional (defaults to red).
$status-dark-warn: mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$status-dark-theme: mat-dark-theme((
  color: (
    primary: $status-dark-primary,
    accent: $status-dark-accent,
    warn: $status-dark-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.

// Define a custom mixin that takes in the current theme
@mixin theme-color-grabber-dark($theme) {
  // Parse the theme and create variables for each color in the pallete
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);

  // Create theme specfic styles
  .primary-color-bg {
    background-color: mat-color($primary);
  }
  .accent-color-bg {
    background-color: mat-color($accent);
  }
  .warn-color-bg {
    background-color: mat-color($warn);
  }

  .primary-color-text {
    color: mat-color($primary);
  }
  .accent-color-text {
    color: mat-color($accent);
  }
  .warn-color-text {
    color: mat-color($warn);
  }

  @for $i from 1 through 10 {
    .bg-#{$i * 10} {
      background-color: lighten(#121212, $i * 10);
      //background-color: mat-color($background);
    }
  }
}

@mixin theme-color-grabber-light($theme) {
  // Parse the theme and create variables for each color in the pallete
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);

  // Create theme specfic styles
  .primary-color-bg {
    background-color: mat-color($primary);
  }
  .accent-color-bg {
    background-color: mat-color($accent);
  }
  .warn-color-bg {
    background-color: mat-color($warn);
  }

  .primary-color-text {
    color: mat-color($primary);
  }
  .accent-color-text {
    color: mat-color($accent);
  }
  .warn-color-text {
    color: mat-color($warn);
  }

  @for $i from 1 through 10 {
    .bg-#{$i * 10} {
      background-color: darken(white, $i * 10);
      //background-color: mat-color($background);
    }
  }
}


.color-scheme-dark {
  @include theme-color-grabber-dark($status-dark-theme);
  @include angular-material-theme($status-dark-theme);

  background-color: #121212;
  color: #FFF;
}

.color-scheme-light {
  @include theme-color-grabber-light($status-theme);
  @include angular-material-theme($status-theme);

}

/* You can add global styles to this file, and also import other style files */
@import "shared/scss/styles";

html, body {
  height: 100%;
  transition: background ease-in-out 150ms, color ease-in-out 150ms;
  box-sizing: border-box;
}
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
